{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  
  "_Startup": "Settings that will only be used at startup.",
  "Startup": {
    "_EnableSwagger": "Enable or disable the Swagger UI.",
    "EnableSwagger": false,
    "_AllowCors": "Allow CORS for every request.",
    "AllowCors": false
  },  
  
  "ConnectionStrings": {
    "_MongoConnection": "The connection string to the MongoDB database.",
    "MongoConnection": "mongodb://mongo:27017"
  },
  
  "_Multiplexers": "Define ports and for what protocols to listen on these ports.",
  "Multiplexers": [
    {
      "_Enabled": "Enable or disable this multiplexer.",
      "Enabled": true,
      "_Name": "A name used to identify the multiplexer during logging.",
      "Name": "Netflow-9 Multiplexer",
      "_ListeningPort": "The port this multiplexer will listen on.",
      "ListeningPort": 2055,
      "_Parsers": "The parsers that will be used to parse incoming packets.",
      "Parsers": [ "Netflow9" , "Netflow5" ]
    },
    {
      "Enabled": true,
      "Name": "Ipfix Multiplexer",
      "ListeningPort": 2056,
      "Parsers": [ "Ipfix" ]
    }
  ],
  
  "_Security": "Security configuration.",
  "Security": {
    "_Enabled": "Enable or disable the requirement for authentication to access protected endpoints.",
    "Enabled": true,
    
    "_Access": "Configuration for users and how accessing endpoints should behave.",
    "Access": {
      "_Username": "The username of the default user. Only generated if no users exist in the database.",
      "Username": "netanol",
      "_Password": "The password of the default user.",
      "Password": null
    }
  },
  
  "_DnsCache": "DnsCache configuration.",
  "DnsCache": {
    "_Enabled": "Enable or disable the DnsCacheService.",
    "Enabled": true,
    
    "_CleanupInterval": "Interval at which the DnsCacheCleanupService should check for expired DNS records. Format is dd:hh:mm:ss.",
    "CleanupInterval": "00:06:00:00",

    "_InvalidationDuration": "Duration after which a DNS record is considered invalid. Format is dd:hh:mm:ss.",
    "InvalidationDuration": "00:01:00:00"
  },
  
  "_DuplicateFlagging": "DuplicateFlagging configuration",
  "DuplicateFlagging": {
    "_ClaimExpirationLifespan": "How long a flow exporter has the claim to be the origin for traces.",
    "ClaimExpirationLifespan": "00:10:00",
    
    "_CleanupInterval": "Interval between cleaning up unused claims.",
    "CleanupInterval": "01:00:00"
  },
  
  "_TagsRequest": "Configuration for the option to request tag from a VMware machine.",
  "TagsRequest": {
    "_Enabled": "Enable or disable the tag service.",
    "Enabled": false,
    
    "_VmWareRequest": "Configuration for the requesting of the tags.",
    "VmWareRequest": {
      "_VmWareTargetAddress": "The address of the target.",
      "VmWareTargetAddress": "",
      
      "_MaxRequestPerSecond" : "Maximum request per second",
      "MaxRequestPerSecond" : "10",
      
      "_VmWareCredentials": "Credentials for the VMWare API.",
      "VmWareCredentials": {
        "_Username": "The username of the vmware client for the API.",
        "Username": "",
        "_Password": "The password of the vmware client for the API.",
        "Password": ""
      },
      
      "_VmWareApiPaths": "Paths for getting certain information from the Vmware API.",
      "VmWareApiPaths": {
        "_SessionPath": "Path for getting a session token.",
        "SessionPath": "/rest/com/vmware/cis/session",
        "_TaggingAssociationsPath": "Path for getting all machines with their tag.",
        "TaggingAssociationsPath": "/api/vcenter/tagging/associations"
      }
    }
  },
  
  "_TagsCache" : "Configurations for the tag cache service.",
  "TagsCache" : {
    "_RefreshPeriod" : "The time interval to send request to the target ip to get the tags. Format is dd:hh:mm:ss",
    "RefreshPeriod" : "12:00:00"
  },
  
  "_FlowImportMetrics": "Configuration for the flowImport",
  "FlowImportMetrics": {
    "_TraceSummationPeriod": "Defines how often the flow should be saved into a combined flow",
    "TraceSummationPeriod": "00:01:00",  
    "_FlowSavePeriod" : "Defines for what period the flowImports should be saved",
    "FlowSavePeriod": "12:00:00"
  }
}
